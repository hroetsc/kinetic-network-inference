- Project '~/kinetic-network-inference' loaded. [renv 1.0.5]
- The project is out-of-sync -- use `renv::status()` for details.
28Ptmux;]1337;ReportCellSize\GKS: cannot open display - headless operation mode active
  22.231 Î¼s (275 allocations: 24.19 KiB)
  600.994 Î¼s (9548 allocations: 833.62 KiB)
Sampling (8 threads)   0%|                              |  ETA: N/A
Sampling (8 threads)  12%|â–ˆâ–ˆâ–ˆâ–Š                          |  ETA: 6:36:52
Sampling (8 threads)  25%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ                      |  ETA: 2:50:05
Sampling (8 threads)  38%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Ž                  |  ETA: 1:34:30
Sampling (8 threads)  50%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ               |  ETA: 0:56:42
Sampling (8 threads)  62%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Š           |  ETA: 0:34:04
Sampling (8 threads)  75%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ       |  ETA: 0:19:08
Sampling (8 threads)  88%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Ž   |  ETA: 0:08:17
Sampling (8 threads) 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| Time: 0:58:25
Sampling (8 threads) 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| Time: 0:58:29
ERROR: LoadError: MethodError: no method matching hdf5_type_id(::Type{Union{Missing, Float64}}, ::Val{false})

Closest candidates are:
  hdf5_type_id(::Type{T}, ::Val{false}) where T
   @ HDF5 ~/.julia/packages/HDF5/MIuzl/src/typeconversions.jl:81
  hdf5_type_id(::Type{T}) where T
   @ HDF5 ~/.julia/packages/HDF5/MIuzl/src/typeconversions.jl:71
  hdf5_type_id(::Type{T}, !Matched::Val{true}) where T
   @ HDF5 ~/.julia/packages/HDF5/MIuzl/src/typeconversions.jl:72

Stacktrace:
  [1] hdf5_type_id(::Type{Union{Missing, Float64}}, isstruct::Val{false})
    @ HDF5 ~/.julia/packages/HDF5/MIuzl/src/typeconversions.jl:81
  [2] hdf5_type_id(::Type{Union{Missing, Float64}})
    @ HDF5 ~/.julia/packages/HDF5/MIuzl/src/typeconversions.jl:71
  [3] datatype(x::Matrix{Union{Missing, Float64}})
    @ HDF5 ~/.julia/packages/HDF5/MIuzl/src/typeconversions.jl:69
  [4] create_dataset(parent::HDF5.Group, name::String, data::Matrix{Union{Missing, Float64}}; pv::@Kwargs{chunk::Vector{Int64}, shuffle::Bool, deflate::Int64})
    @ HDF5 ~/.julia/packages/HDF5/MIuzl/src/datasets.jl:286
  [5] write_dataset(parent::HDF5.Group, name::String, data::Matrix{Union{Missing, Float64}}; pv::@Kwargs{chunk::Vector{Int64}, shuffle::Bool, deflate::Int64})
    @ HDF5 ~/.julia/packages/HDF5/MIuzl/src/datasets.jl:308
  [6] write(parent::HDF5.Group, name::String, data::Matrix{Union{Missing, Float64}}; pv::@Kwargs{chunk::Vector{Int64}, shuffle::Bool, deflate::Int64})
    @ HDF5 ~/.julia/packages/HDF5/MIuzl/src/datasets.jl:332
  [7] setindex!(parent::HDF5.Group, val::Matrix{Union{Missing, Float64}}, path::String; pv::@Kwargs{shuffle::Bool, deflate::Int64})
    @ HDF5 ~/.julia/packages/HDF5/MIuzl/src/highlevel.jl:113
  [8] write(f::HDF5.File, c::Chains{Union{Missing, Float64}, AxisArrays.AxisArray{Union{Missing, Float64}, 3, Array{Union{Missing, Float64}, 3}, Tuple{AxisArrays.Axis{:iter, StepRange{Int64, Int64}}, AxisArrays.Axis{:var, Vector{Symbol}}, AxisArrays.Axis{:chain, UnitRange{Int64}}}}, Missing, @NamedTuple{parameters::Vector{Symbol}, internals::Vector{Symbol}}, @NamedTuple{varname_to_symbol::OrderedCollections.OrderedDict{AbstractPPL.VarName, Symbol}, model::DynamicPPL.Model{typeof(likelihood), (:Xm, :problem0, :problem, :Î±_sigma, :Î¸_sigma, :Î±_k, :Î¸_k), (), (), Tuple{Matrix{Union{Missing, Float64}}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, Vararg{Int64, 4}}, Tuple{}, DynamicPPL.DefaultContext}, sampler::DynamicPPL.Sampler{SMC{(), AdvancedPS.ResampleWithESSThreshold{typeof(AdvancedPS.resample_systematic), Float64}}}, samplerstate::Turing.Inference.SMCState{AdvancedPS.ParticleContainer{AdvancedPS.Trace{AdvancedPS.LibtaskModel{Turing.Essential.TracedModel{AbstractMCMC.AbstractSampler, DynamicPPL.AbstractVarInfo, DynamicPPL.Model, Tuple}, TapedTask{typeof(likelihood), Tuple{DynamicPPL.Model{typeof(likelihood), (:Xm, :problem0, :problem, :Î±_sigma, :Î¸_sigma, :Î±_k, :Î¸_k), (), (), Tuple{Matrix{Union{Missing, Float64}}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, Vararg{Int64, 4}}, Tuple{}, DynamicPPL.DefaultContext}, DynamicPPL.TypedVarInfo{@NamedTuple{Î£::DynamicPPL.Metadata{Dict{AbstractPPL.VarName{:Î£, Setfield.IdentityLens}, Int64}, Vector{InverseGamma{Float64}}, Vector{AbstractPPL.VarName{:Î£, Setfield.IdentityLens}}, Vector{Float64}, Vector{Set{DynamicPPL.Selector}}}, k::DynamicPPL.Metadata{Dict{AbstractPPL.VarName{:k, Setfield.IdentityLens}, Int64}, Vector{Product{Continuous, InverseGamma{Float64}, Vector{InverseGamma{Float64}}}}, Vector{AbstractPPL.VarName{:k, Setfield.IdentityLens}}, Vector{Float64}, Vector{Set{DynamicPPL.Selector}}}, s::DynamicPPL.Metadata{Dict{AbstractPPL.VarName{:s, Setfield.IdentityLens}, Int64}, Vector{IsoNormal}, Vector{AbstractPPL.VarName{:s, Setfield.IdentityLens}}, Vector{Float64}, Vector{Set{DynamicPPL.Selector}}}}, Float64}, DynamicPPL.SamplingContext{DynamicPPL.Sampler{SMC{(), AdvancedPS.ResampleWithESSThreshold{typeof(AdvancedPS.resample_systematic), Float64}}}, DynamicPPL.DefaultContext, AdvancedPS.TracedRNG{UInt64, 1, Random123.Philox2x{UInt64, 10}}}, Matrix{Union{Missing, Float64}}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, Vararg{Int64, 4}}}}, AdvancedPS.TracedRNG{UInt64, 1, Random123.Philox2x{UInt64, 10}}}, AdvancedPS.TracedRNG{UInt64, 1, Random123.Philox2x{UInt64, 10}}}, Float64}, start_time::Vector{Float64}, stop_time::Vector{Float64}}})
    @ MCMCChainsStorage ~/.julia/packages/MCMCChainsStorage/Zv1V6/src/MCMCChainsStorage.jl:18
  [9] #9
    @ ~/kinetic-network-inference/src/_plot_utils.jl:37 [inlined]
 [10] (::HDF5.var"#17#18"{HDF5.HDF5Context, @Kwargs{}, var"#9#10"{Chains{Union{Missing, Float64}, AxisArrays.AxisArray{Union{Missing, Float64}, 3, Array{Union{Missing, Float64}, 3}, Tuple{AxisArrays.Axis{:iter, StepRange{Int64, Int64}}, AxisArrays.Axis{:var, Vector{Symbol}}, AxisArrays.Axis{:chain, UnitRange{Int64}}}}, Missing, @NamedTuple{parameters::Vector{Symbol}, internals::Vector{Symbol}}, @NamedTuple{varname_to_symbol::OrderedCollections.OrderedDict{AbstractPPL.VarName, Symbol}, model::DynamicPPL.Model{typeof(likelihood), (:Xm, :problem0, :problem, :Î±_sigma, :Î¸_sigma, :Î±_k, :Î¸_k), (), (), Tuple{Matrix{Union{Missing, Float64}}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, Vararg{Int64, 4}}, Tuple{}, DynamicPPL.DefaultContext}, sampler::DynamicPPL.Sampler{SMC{(), AdvancedPS.ResampleWithESSThreshold{typeof(AdvancedPS.resample_systematic), Float64}}}, samplerstate::Turing.Inference.SMCState{AdvancedPS.ParticleContainer{AdvancedPS.Trace{AdvancedPS.LibtaskModel{Turing.Essential.TracedModel{AbstractMCMC.AbstractSampler, DynamicPPL.AbstractVarInfo, DynamicPPL.Model, Tuple}, TapedTask{typeof(likelihood), Tuple{DynamicPPL.Model{typeof(likelihood), (:Xm, :problem0, :problem, :Î±_sigma, :Î¸_sigma, :Î±_k, :Î¸_k), (), (), Tuple{Matrix{Union{Missing, Float64}}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, Vararg{Int64, 4}}, Tuple{}, DynamicPPL.DefaultContext}, DynamicPPL.TypedVarInfo{@NamedTuple{Î£::DynamicPPL.Metadata{Dict{AbstractPPL.VarName{:Î£, Setfield.IdentityLens}, Int64}, Vector{InverseGamma{Float64}}, Vector{AbstractPPL.VarName{:Î£, Setfield.IdentityLens}}, Vector{Float64}, Vector{Set{DynamicPPL.Selector}}}, k::DynamicPPL.Metadata{Dict{AbstractPPL.VarName{:k, Setfield.IdentityLens}, Int64}, Vector{Product{Continuous, InverseGamma{Float64}, Vector{InverseGamma{Float64}}}}, Vector{AbstractPPL.VarName{:k, Setfield.IdentityLens}}, Vector{Float64}, Vector{Set{DynamicPPL.Selector}}}, s::DynamicPPL.Metadata{Dict{AbstractPPL.VarName{:s, Setfield.IdentityLens}, Int64}, Vector{IsoNormal}, Vector{AbstractPPL.VarName{:s, Setfield.IdentityLens}}, Vector{Float64}, Vector{Set{DynamicPPL.Selector}}}}, Float64}, DynamicPPL.SamplingContext{DynamicPPL.Sampler{SMC{(), AdvancedPS.ResampleWithESSThreshold{typeof(AdvancedPS.resample_systematic), Float64}}}, DynamicPPL.DefaultContext, AdvancedPS.TracedRNG{UInt64, 1, Random123.Philox2x{UInt64, 10}}}, Matrix{Union{Missing, Float64}}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, Vararg{Int64, 4}}}}, AdvancedPS.TracedRNG{UInt64, 1, Random123.Philox2x{UInt64, 10}}}, AdvancedPS.TracedRNG{UInt64, 1, Random123.Philox2x{UInt64, 10}}}, Float64}, start_time::Vector{Float64}, stop_time::Vector{Float64}}}}, HDF5.File})()
    @ HDF5 ~/.julia/packages/HDF5/MIuzl/src/file.jl:98
 [11] task_local_storage(body::HDF5.var"#17#18"{HDF5.HDF5Context, @Kwargs{}, var"#9#10"{Chains{Union{Missing, Float64}, AxisArrays.AxisArray{Union{Missing, Float64}, 3, Array{Union{Missing, Float64}, 3}, Tuple{AxisArrays.Axis{:iter, StepRange{Int64, Int64}}, AxisArrays.Axis{:var, Vector{Symbol}}, AxisArrays.Axis{:chain, UnitRange{Int64}}}}, Missing, @NamedTuple{parameters::Vector{Symbol}, internals::Vector{Symbol}}, @NamedTuple{varname_to_symbol::OrderedCollections.OrderedDict{AbstractPPL.VarName, Symbol}, model::DynamicPPL.Model{typeof(likelihood), (:Xm, :problem0, :problem, :Î±_sigma, :Î¸_sigma, :Î±_k, :Î¸_k), (), (), Tuple{Matrix{Union{Missing, Float64}}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, Vararg{Int64, 4}}, Tuple{}, DynamicPPL.DefaultContext}, sampler::DynamicPPL.Sampler{SMC{(), AdvancedPS.ResampleWithESSThreshold{typeof(AdvancedPS.resample_systematic), Float64}}}, samplerstate::Turing.Inference.SMCState{AdvancedPS.ParticleContainer{AdvancedPS.Trace{AdvancedPS.LibtaskModel{Turing.Essential.TracedModel{AbstractMCMC.AbstractSampler, DynamicPPL.AbstractVarInfo, DynamicPPL.Model, Tuple}, TapedTask{typeof(likelihood), Tuple{DynamicPPL.Model{typeof(likelihood), (:Xm, :problem0, :problem, :Î±_sigma, :Î¸_sigma, :Î±_k, :Î¸_k), (), (), Tuple{Matrix{Union{Missing, Float64}}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, Vararg{Int64, 4}}, Tuple{}, DynamicPPL.DefaultContext}, DynamicPPL.TypedVarInfo{@NamedTuple{Î£::DynamicPPL.Metadata{Dict{AbstractPPL.VarName{:Î£, Setfield.IdentityLens}, Int64}, Vector{InverseGamma{Float64}}, Vector{AbstractPPL.VarName{:Î£, Setfield.IdentityLens}}, Vector{Float64}, Vector{Set{DynamicPPL.Selector}}}, k::DynamicPPL.Metadata{Dict{AbstractPPL.VarName{:k, Setfield.IdentityLens}, Int64}, Vector{Product{Continuous, InverseGamma{Float64}, Vector{InverseGamma{Float64}}}}, Vector{AbstractPPL.VarName{:k, Setfield.IdentityLens}}, Vector{Float64}, Vector{Set{DynamicPPL.Selector}}}, s::DynamicPPL.Metadata{Dict{AbstractPPL.VarName{:s, Setfield.IdentityLens}, Int64}, Vector{IsoNormal}, Vector{AbstractPPL.VarName{:s, Setfield.IdentityLens}}, Vector{Float64}, Vector{Set{DynamicPPL.Selector}}}}, Float64}, DynamicPPL.SamplingContext{DynamicPPL.Sampler{SMC{(), AdvancedPS.ResampleWithESSThreshold{typeof(AdvancedPS.resample_systematic), Float64}}}, DynamicPPL.DefaultContext, AdvancedPS.TracedRNG{UInt64, 1, Random123.Philox2x{UInt64, 10}}}, Matrix{Union{Missing, Float64}}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, Vararg{Int64, 4}}}}, AdvancedPS.TracedRNG{UInt64, 1, Random123.Philox2x{UInt64, 10}}}, AdvancedPS.TracedRNG{UInt64, 1, Random123.Philox2x{UInt64, 10}}}, Float64}, start_time::Vector{Float64}, stop_time::Vector{Float64}}}}, HDF5.File}, key::Symbol, val::HDF5.HDF5Context)
    @ Base ./task.jl:297
 [12] h5open(::var"#9#10"{Chains{Union{Missing, Float64}, AxisArrays.AxisArray{Union{Missing, Float64}, 3, Array{Union{Missing, Float64}, 3}, Tuple{AxisArrays.Axis{:iter, StepRange{Int64, Int64}}, AxisArrays.Axis{:var, Vector{Symbol}}, AxisArrays.Axis{:chain, UnitRange{Int64}}}}, Missing, @NamedTuple{parameters::Vector{Symbol}, internals::Vector{Symbol}}, @NamedTuple{varname_to_symbol::OrderedCollections.OrderedDict{AbstractPPL.VarName, Symbol}, model::DynamicPPL.Model{typeof(likelihood), (:Xm, :problem0, :problem, :Î±_sigma, :Î¸_sigma, :Î±_k, :Î¸_k), (), (), Tuple{Matrix{Union{Missing, Float64}}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, Vararg{Int64, 4}}, Tuple{}, DynamicPPL.DefaultContext}, sampler::DynamicPPL.Sampler{SMC{(), AdvancedPS.ResampleWithESSThreshold{typeof(AdvancedPS.resample_systematic), Float64}}}, samplerstate::Turing.Inference.SMCState{AdvancedPS.ParticleContainer{AdvancedPS.Trace{AdvancedPS.LibtaskModel{Turing.Essential.TracedModel{AbstractMCMC.AbstractSampler, DynamicPPL.AbstractVarInfo, DynamicPPL.Model, Tuple}, TapedTask{typeof(likelihood), Tuple{DynamicPPL.Model{typeof(likelihood), (:Xm, :problem0, :problem, :Î±_sigma, :Î¸_sigma, :Î±_k, :Î¸_k), (), (), Tuple{Matrix{Union{Missing, Float64}}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, Vararg{Int64, 4}}, Tuple{}, DynamicPPL.DefaultContext}, DynamicPPL.TypedVarInfo{@NamedTuple{Î£::DynamicPPL.Metadata{Dict{AbstractPPL.VarName{:Î£, Setfield.IdentityLens}, Int64}, Vector{InverseGamma{Float64}}, Vector{AbstractPPL.VarName{:Î£, Setfield.IdentityLens}}, Vector{Float64}, Vector{Set{DynamicPPL.Selector}}}, k::DynamicPPL.Metadata{Dict{AbstractPPL.VarName{:k, Setfield.IdentityLens}, Int64}, Vector{Product{Continuous, InverseGamma{Float64}, Vector{InverseGamma{Float64}}}}, Vector{AbstractPPL.VarName{:k, Setfield.IdentityLens}}, Vector{Float64}, Vector{Set{DynamicPPL.Selector}}}, s::DynamicPPL.Metadata{Dict{AbstractPPL.VarName{:s, Setfield.IdentityLens}, Int64}, Vector{IsoNormal}, Vector{AbstractPPL.VarName{:s, Setfield.IdentityLens}}, Vector{Float64}, Vector{Set{DynamicPPL.Selector}}}}, Float64}, DynamicPPL.SamplingContext{DynamicPPL.Sampler{SMC{(), AdvancedPS.ResampleWithESSThreshold{typeof(AdvancedPS.resample_systematic), Float64}}}, DynamicPPL.DefaultContext, AdvancedPS.TracedRNG{UInt64, 1, Random123.Philox2x{UInt64, 10}}}, Matrix{Union{Missing, Float64}}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, Vararg{Int64, 4}}}}, AdvancedPS.TracedRNG{UInt64, 1, Random123.Philox2x{UInt64, 10}}}, AdvancedPS.TracedRNG{UInt64, 1, Random123.Philox2x{UInt64, 10}}}, Float64}, start_time::Vector{Float64}, stop_time::Vector{Float64}}}}, ::String, ::Vararg{String}; context::HDF5.HDF5Context, pv::@Kwargs{})
    @ HDF5 ~/.julia/packages/HDF5/MIuzl/src/file.jl:93
 [13] h5open(::Function, ::String, ::String)
    @ HDF5 ~/.julia/packages/HDF5/MIuzl/src/file.jl:91
 [14] diagnostics_and_save_sim(myChains::Chains{Union{Missing, Float64}, AxisArrays.AxisArray{Union{Missing, Float64}, 3, Array{Union{Missing, Float64}, 3}, Tuple{AxisArrays.Axis{:iter, StepRange{Int64, Int64}}, AxisArrays.Axis{:var, Vector{Symbol}}, AxisArrays.Axis{:chain, UnitRange{Int64}}}}, Missing, @NamedTuple{parameters::Vector{Symbol}, internals::Vector{Symbol}}, @NamedTuple{varname_to_symbol::OrderedCollections.OrderedDict{AbstractPPL.VarName, Symbol}, model::DynamicPPL.Model{typeof(likelihood), (:Xm, :problem0, :problem, :Î±_sigma, :Î¸_sigma, :Î±_k, :Î¸_k), (), (), Tuple{Matrix{Union{Missing, Float64}}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, Vararg{Int64, 4}}, Tuple{}, DynamicPPL.DefaultContext}, sampler::DynamicPPL.Sampler{SMC{(), AdvancedPS.ResampleWithESSThreshold{typeof(AdvancedPS.resample_systematic), Float64}}}, samplerstate::Turing.Inference.SMCState{AdvancedPS.ParticleContainer{AdvancedPS.Trace{AdvancedPS.LibtaskModel{Turing.Essential.TracedModel{AbstractMCMC.AbstractSampler, DynamicPPL.AbstractVarInfo, DynamicPPL.Model, Tuple}, TapedTask{typeof(likelihood), Tuple{DynamicPPL.Model{typeof(likelihood), (:Xm, :problem0, :problem, :Î±_sigma, :Î¸_sigma, :Î±_k, :Î¸_k), (), (), Tuple{Matrix{Union{Missing, Float64}}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, Vararg{Int64, 4}}, Tuple{}, DynamicPPL.DefaultContext}, DynamicPPL.TypedVarInfo{@NamedTuple{Î£::DynamicPPL.Metadata{Dict{AbstractPPL.VarName{:Î£, Setfield.IdentityLens}, Int64}, Vector{InverseGamma{Float64}}, Vector{AbstractPPL.VarName{:Î£, Setfield.IdentityLens}}, Vector{Float64}, Vector{Set{DynamicPPL.Selector}}}, k::DynamicPPL.Metadata{Dict{AbstractPPL.VarName{:k, Setfield.IdentityLens}, Int64}, Vector{Product{Continuous, InverseGamma{Float64}, Vector{InverseGamma{Float64}}}}, Vector{AbstractPPL.VarName{:k, Setfield.IdentityLens}}, Vector{Float64}, Vector{Set{DynamicPPL.Selector}}}, s::DynamicPPL.Metadata{Dict{AbstractPPL.VarName{:s, Setfield.IdentityLens}, Int64}, Vector{IsoNormal}, Vector{AbstractPPL.VarName{:s, Setfield.IdentityLens}}, Vector{Float64}, Vector{Set{DynamicPPL.Selector}}}}, Float64}, DynamicPPL.SamplingContext{DynamicPPL.Sampler{SMC{(), AdvancedPS.ResampleWithESSThreshold{typeof(AdvancedPS.resample_systematic), Float64}}}, DynamicPPL.DefaultContext, AdvancedPS.TracedRNG{UInt64, 1, Random123.Philox2x{UInt64, 10}}}, Matrix{Union{Missing, Float64}}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.FullSpecialize, typeof(massaction_init!), UniformScaling{Bool}, Nothing, Nothing, typeof(jacobian!), Nothing, Nothing, SparseMatrixCSC{Float64, Int64}, SparseMatrixCSC{Float64, Int64}, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, @Kwargs{}, SciMLBase.StandardODEProblem}, Vararg{Int64, 4}}}}, AdvancedPS.TracedRNG{UInt64, 1, Random123.Philox2x{UInt64, 10}}}, AdvancedPS.TracedRNG{UInt64, 1, Random123.Philox2x{UInt64, 10}}}, Float64}, start_time::Vector{Float64}, stop_time::Vector{Float64}}})
    @ Main ~/kinetic-network-inference/src/_plot_utils.jl:36
 [15] top-level scope
    @ ~/kinetic-network-inference/src/inference_insilico.jl:154
in expression starting at /home/hroetsc/kinetic-network-inference/src/inference_insilico.jl:154
